{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wiki Create Guide \u00b6 Use Notepad++(Optional) \u00b6 Notepad++ Download Explorer Plug Install MKDocs \u00b6 MKDocs Office Website Material Theme Office Website Config your site, and add your notebooks Now your site looks like this: Host Your Site To Github \u00b6 Create a new repository. Example: https://github.com/user_name/repository_name Initialize your local git repository, and add remote github repository, and push it 1 2 3 4 5 6 cd your_site_path git init git add remote https://github.com/user_name/repository_name git add . git commit -m \"first commit\" git push origin master Deploy your site 1 mkdocs gh-deploy So your site(html files) on the gh-pages branch, and your site(markdown files) on the master branch It is master branch: It is gh-pages branch: Success It is OK.","title":"Home"},{"location":"#wiki-create-guide","text":"","title":"Wiki Create Guide"},{"location":"#use-notepadoptional","text":"Notepad++ Download Explorer Plug","title":"Use Notepad++(Optional)"},{"location":"#install-mkdocs","text":"MKDocs Office Website Material Theme Office Website Config your site, and add your notebooks Now your site looks like this:","title":"Install MKDocs"},{"location":"#host-your-site-to-github","text":"Create a new repository. Example: https://github.com/user_name/repository_name Initialize your local git repository, and add remote github repository, and push it 1 2 3 4 5 6 cd your_site_path git init git add remote https://github.com/user_name/repository_name git add . git commit -m \"first commit\" git push origin master Deploy your site 1 mkdocs gh-deploy So your site(html files) on the gh-pages branch, and your site(markdown files) on the master branch It is master branch: It is gh-pages branch: Success It is OK.","title":"Host Your Site To Github"},{"location":"about/","text":"Wikier Info \u00b6 About Me \u00b6 I am a Embedded Software Engineer,I am good at embedded programming. Know Me \u00b6 My GitHub My Blog Note I haven't update my CSDN blog for a long time,because I am very busy with my job.But I will update my konwledge on this wiki site from now on. Connect Me \u00b6 Email: fanhongchaung@gmail.com QQ: 847923458 WeChat: shoujimaizi2289","title":"About Me"},{"location":"about/#wikier-info","text":"","title":"Wikier Info"},{"location":"about/#about-me","text":"I am a Embedded Software Engineer,I am good at embedded programming.","title":"About Me"},{"location":"about/#know-me","text":"My GitHub My Blog Note I haven't update my CSDN blog for a long time,because I am very busy with my job.But I will update my konwledge on this wiki site from now on.","title":"Know Me"},{"location":"about/#connect-me","text":"Email: fanhongchaung@gmail.com QQ: 847923458 WeChat: shoujimaizi2289","title":"Connect Me"},{"location":"ARM-Linux/arm-linux/","text":"","title":"linux"},{"location":"Android/android_broadcast_boot/","text":"Android App\u5f00\u673a\u81ea\u542f\u4e4b\u76d1\u542c\u5f00\u673a\u5e7f\u64ad \u00b6 1.1. \u521b\u5efa\u5e7f\u64ad\u63a5\u6536\u5668 1 2 3 4 5 6 7 8 9 10 11 public class BootBroadcastReceive extends BroadcastReceiver { public static final String action_boot = \"android.intent.action.BOOT_COMPLETED\" ; @Override public void onReceive ( Context context , Intent intent ) { if ( intent . getAction (). equals ( action_boot )){ Intent bootIntent = new Intent ( context , MainActivity . class ); bootIntent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ); context . startActivity ( bootIntent ); } } } 1.2. \u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u6ce8\u518c\u5e7f\u64ad\u63a5\u6536\u5668 1 2 3 4 5 6 7 8 9 10 < receiver android:name = \".BootBroadcastReceive\" android:enabled = \"true\" android:exported = \"true\" android:permission = \"android.permission.RECEIVE_BOOT_COMPLETED\" > < intent-filter > < action android:name = \"android.intent.action.BOOT_COMPLETED\" /> < category android:name = \"android.intent.category.HOME\" /> </ intent-filter > </ receiver >","title":"\u5f00\u673a\u5e7f\u64ad"},{"location":"Android/android_broadcast_boot/#android-app","text":"1.1. \u521b\u5efa\u5e7f\u64ad\u63a5\u6536\u5668 1 2 3 4 5 6 7 8 9 10 11 public class BootBroadcastReceive extends BroadcastReceiver { public static final String action_boot = \"android.intent.action.BOOT_COMPLETED\" ; @Override public void onReceive ( Context context , Intent intent ) { if ( intent . getAction (). equals ( action_boot )){ Intent bootIntent = new Intent ( context , MainActivity . class ); bootIntent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ); context . startActivity ( bootIntent ); } } } 1.2. \u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u6ce8\u518c\u5e7f\u64ad\u63a5\u6536\u5668 1 2 3 4 5 6 7 8 9 10 < receiver android:name = \".BootBroadcastReceive\" android:enabled = \"true\" android:exported = \"true\" android:permission = \"android.permission.RECEIVE_BOOT_COMPLETED\" > < intent-filter > < action android:name = \"android.intent.action.BOOT_COMPLETED\" /> < category android:name = \"android.intent.category.HOME\" /> </ intent-filter > </ receiver >","title":"Android App\u5f00\u673a\u81ea\u542f\u4e4b\u76d1\u542c\u5f00\u673a\u5e7f\u64ad"},{"location":"Android/android_enable_usb_debug/","text":"\u4f7fAndroid\u7cfb\u7edf\u9ed8\u8ba4\u5f00\u542fUSB\u8c03\u8bd5\u529f\u80fd \u00b6 1.1. \u9ed8\u8ba4\u663e\u793a \u201c\u5f00\u53d1\u8005\u9009\u9879\u201d \u5728packages/apps/Settings/src/com/android/settings/SettingsActivity.java\u6587\u4ef6\u7684updateTilesList(...)\u51fd\u6570\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 private void updateTilesList ( List < DashboardCategory > target ) { /* added by fhc 2017-11-24 */ SharedPreferences . Editor editor = mDevelopmentPreferences . edit (); editor . putBoolean ( DevelopmentSettings . PREF_SHOW , true ); editor . commit (); /* added by fhc 2017-11-24 end */ final boolean showDev = mDevelopmentPreferences . getBoolean ( DevelopmentSettings . PREF_SHOW , android . os . Build . TYPE . equals ( \"eng\" )); final UserManager um = ( UserManager ) getSystemService ( Context . USER_SERVICE ); ... \uff08 \u6b64\u5904\u7701\u7565N\u884c\u4ee3\u7801 \uff09 } 1.2. \u9ed8\u8ba4\u5141\u8bb8 \u201c\u5b89\u88c5\u672a\u77e5\u6765\u6e90\u5e94\u7528\u201d \u5c06frameworks/base/packages/SettingsProvider/res/values/defaults.xml\u6587\u4ef6\u4e2ddef_install_non_market_apps\u7684\u503c\u7f6e\u4e3atrue\uff0c\u5373\u53ef\u5141\u8bb8 \u201c\u5b89\u88c5\u672a\u77e5\u6765\u6e90\u5e94\u7528\u201d\u3002 1 < bool name = \"def_install_non_market_apps\" > true </ bool > 1.3. \u9ed8\u8ba4\u5141\u8bb8USB\u8c03\u8bd5 \u5bf9frameworks/base/services/usb/java/com/android/server/usb/UsbDeviceManager.java\u7684\u51fd\u6570systemReady()\u505a\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public void systemReady () { if ( DEBUG ) Slog . d ( TAG , \"systemReady\" ); mNotificationManager = ( NotificationManager ) mContext . getSystemService ( Context . NOTIFICATION_SERVICE ); // We do not show the USB notification if the primary volume supports mass storage. // The legacy mass storage UI will be used instead. boolean massStorageSupported = false ; final StorageManager storageManager = StorageManager . from ( mContext ); final StorageVolume primary = storageManager . getPrimaryVolume (); massStorageSupported = primary != null && primary . allowMassStorage (); mUseUsbNotification = ! massStorageSupported && mContext . getResources (). getBoolean ( com . android . internal . R . bool . config_usbChargingMessage ); // make sure the ADB_ENABLED setting value matches the current state try { /* modified by fhc 2017-11-28 */ /*Settings.Global.putInt(mContentResolver, Settings.Global.ADB_ENABLED, mAdbEnabled ? 1 : 0);*/ Settings . Global . putInt ( mContentResolver , Settings . Global . ADB_ENABLED , 1 ); /* modified by fhc 2017-11-28 */ } catch ( SecurityException e ) { // If UserManager.DISALLOW_DEBUGGING_FEATURES is on, that this setting can't be changed. Slog . d ( TAG , \"ADB_ENABLED is restricted.\" ); } mHandler . sendEmptyMessage ( MSG_SYSTEM_READY ); } 1.4. \u53bb\u6389USB\u63d2\u5165\u65f6\u7684\u6388\u6743\u63d0\u793a\u5bf9\u8bdd\u6846 \u5bf9frameworks/base/packages/SystemUI/src/com/android/systemui/usb/UsbDebuggingActivity.java\u7684onReceive()\u51fd\u6570\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 @Override public void onReceive ( Context content , Intent intent ) { String action = intent . getAction (); if (! UsbManager . ACTION_USB_STATE . equals ( action )) { return ; } /* modified by fhc 2017-11-24 */ /*boolean connected = intent.getBooleanExtra(UsbManager.USB_CONNECTED, false); if (!connected) { mActivity.finish(); }*/ /* modified by fhc 2017-11-24 end */ /* added by fhc 2017-11-24 */ boolean connected = false ; //\u7ed9connect\u8d4b\u503c\uff0c\u5173\u6389UI if (! connected ) { mActivity . finish (); } try { IBinder b = ServiceManager . getService ( USB_SERVICE ); IUsbManager service = IUsbManager . Stub . asInterface ( b ); service . allowUsbDebugging ( true , mKey ); } catch ( Exception e ) { Log . e ( TAG , \"Unable to notify Usb service\" , e ); } /* added by fhc 2017-11-24 end */ }","title":"\u9ed8\u8ba4\u5f00\u542fUSB\u8c03\u8bd5\u529f\u80fd"},{"location":"Android/android_enable_usb_debug/#androidusb","text":"1.1. \u9ed8\u8ba4\u663e\u793a \u201c\u5f00\u53d1\u8005\u9009\u9879\u201d \u5728packages/apps/Settings/src/com/android/settings/SettingsActivity.java\u6587\u4ef6\u7684updateTilesList(...)\u51fd\u6570\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 private void updateTilesList ( List < DashboardCategory > target ) { /* added by fhc 2017-11-24 */ SharedPreferences . Editor editor = mDevelopmentPreferences . edit (); editor . putBoolean ( DevelopmentSettings . PREF_SHOW , true ); editor . commit (); /* added by fhc 2017-11-24 end */ final boolean showDev = mDevelopmentPreferences . getBoolean ( DevelopmentSettings . PREF_SHOW , android . os . Build . TYPE . equals ( \"eng\" )); final UserManager um = ( UserManager ) getSystemService ( Context . USER_SERVICE ); ... \uff08 \u6b64\u5904\u7701\u7565N\u884c\u4ee3\u7801 \uff09 } 1.2. \u9ed8\u8ba4\u5141\u8bb8 \u201c\u5b89\u88c5\u672a\u77e5\u6765\u6e90\u5e94\u7528\u201d \u5c06frameworks/base/packages/SettingsProvider/res/values/defaults.xml\u6587\u4ef6\u4e2ddef_install_non_market_apps\u7684\u503c\u7f6e\u4e3atrue\uff0c\u5373\u53ef\u5141\u8bb8 \u201c\u5b89\u88c5\u672a\u77e5\u6765\u6e90\u5e94\u7528\u201d\u3002 1 < bool name = \"def_install_non_market_apps\" > true </ bool > 1.3. \u9ed8\u8ba4\u5141\u8bb8USB\u8c03\u8bd5 \u5bf9frameworks/base/services/usb/java/com/android/server/usb/UsbDeviceManager.java\u7684\u51fd\u6570systemReady()\u505a\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public void systemReady () { if ( DEBUG ) Slog . d ( TAG , \"systemReady\" ); mNotificationManager = ( NotificationManager ) mContext . getSystemService ( Context . NOTIFICATION_SERVICE ); // We do not show the USB notification if the primary volume supports mass storage. // The legacy mass storage UI will be used instead. boolean massStorageSupported = false ; final StorageManager storageManager = StorageManager . from ( mContext ); final StorageVolume primary = storageManager . getPrimaryVolume (); massStorageSupported = primary != null && primary . allowMassStorage (); mUseUsbNotification = ! massStorageSupported && mContext . getResources (). getBoolean ( com . android . internal . R . bool . config_usbChargingMessage ); // make sure the ADB_ENABLED setting value matches the current state try { /* modified by fhc 2017-11-28 */ /*Settings.Global.putInt(mContentResolver, Settings.Global.ADB_ENABLED, mAdbEnabled ? 1 : 0);*/ Settings . Global . putInt ( mContentResolver , Settings . Global . ADB_ENABLED , 1 ); /* modified by fhc 2017-11-28 */ } catch ( SecurityException e ) { // If UserManager.DISALLOW_DEBUGGING_FEATURES is on, that this setting can't be changed. Slog . d ( TAG , \"ADB_ENABLED is restricted.\" ); } mHandler . sendEmptyMessage ( MSG_SYSTEM_READY ); } 1.4. \u53bb\u6389USB\u63d2\u5165\u65f6\u7684\u6388\u6743\u63d0\u793a\u5bf9\u8bdd\u6846 \u5bf9frameworks/base/packages/SystemUI/src/com/android/systemui/usb/UsbDebuggingActivity.java\u7684onReceive()\u51fd\u6570\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 @Override public void onReceive ( Context content , Intent intent ) { String action = intent . getAction (); if (! UsbManager . ACTION_USB_STATE . equals ( action )) { return ; } /* modified by fhc 2017-11-24 */ /*boolean connected = intent.getBooleanExtra(UsbManager.USB_CONNECTED, false); if (!connected) { mActivity.finish(); }*/ /* modified by fhc 2017-11-24 end */ /* added by fhc 2017-11-24 */ boolean connected = false ; //\u7ed9connect\u8d4b\u503c\uff0c\u5173\u6389UI if (! connected ) { mActivity . finish (); } try { IBinder b = ServiceManager . getService ( USB_SERVICE ); IUsbManager service = IUsbManager . Stub . asInterface ( b ); service . allowUsbDebugging ( true , mKey ); } catch ( Exception e ) { Log . e ( TAG , \"Unable to notify Usb service\" , e ); } /* added by fhc 2017-11-24 end */ }","title":"\u4f7fAndroid\u7cfb\u7edf\u9ed8\u8ba4\u5f00\u542fUSB\u8c03\u8bd5\u529f\u80fd"},{"location":"Android/android_hide_virtual_navigation_key/","text":"\u5f7b\u5e95\u9690\u85cf\u865a\u62df\u5bfc\u822a\u952e \u00b6 1.1. \u53bb\u6389\u865a\u62df\u5bfc\u822a\u952e \u627e\u5230frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java\u4e2d\u51fd\u6570setInitialDisplaySize(...)\u4e2d\u7684\u4ee3\u7801\u7247\u6bb5 1 2 3 4 5 6 String navBarOverride = SystemProperties . get ( \"qemu.hw.mainkeys\" ); if ( \"1\" . equals ( navBarOverride )) { mHasNavigationBar = false ; } else if ( \"0\" . equals ( navBarOverride )) { mHasNavigationBar = true ; } \u4fee\u6539\u4e3a 1 2 3 4 5 6 7 8 String navBarOverride = SystemProperties . get ( \"qemu.hw.mainkeys\" ); /* modified by fhc 2017-11-24 */ //if (\"1\".equals(navBarOverride)) { mHasNavigationBar = false ; //} else if (\"0\".equals(navBarOverride)) { // mHasNavigationBar = true; //} /* modified by fhc 2017-11-24 end */ 1.2. \u53bb\u6389\u7cfb\u7edf\u9876\u90e8\u7684\u72b6\u6001\u680f\u548c\u901a\u77e5\u680f \u5c4f\u853d\u624b\u52bf\u76d1\u542c frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java \u4fee\u6539\u4ee3\u7801\u7247\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 @Override public boolean onTouchEvent ( MotionEvent event ) { /* modified by fhc 2017-11-24 */ /*boolean barConsumedEvent = mBar.interceptTouchEvent(event); if (DEBUG_GESTURES) { if (event.getActionMasked() != MotionEvent.ACTION_MOVE) { EventLog.writeEvent(EventLogTags.SYSUI_PANELBAR_TOUCH, event.getActionMasked(), (int) event.getX(), (int) event.getY(), barConsumedEvent ? 1 : 0); } } return barConsumedEvent || super.onTouchEvent(event);*/ return false ; /* modified by fhc 2017-11-24 end */ } ... \uff08 \u6b64\u5904\u7701\u7565N\u884c\u4ee3\u7801 \uff09 @Override public boolean onInterceptTouchEvent ( MotionEvent event ) { /* modified by fhc 2017-11-24 */ //return mBar.interceptTouchEvent(event) || super.onInterceptTouchEvent(event); return false ; /* modified by fhc 2017-11-24 end */ } \u4e0d\u663e\u793a\u72b6\u6001\u680f frameworks/base/core/res/res/values/dimens.xml \u5c06\u72b6\u6001\u680f\u9ad8\u5ea6\u4fee\u6539\u4e3a0dp\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 <!-- Height of the status bar --> < dimen name = \"status_bar_height\" > 0dp </ dimen > \u6b64\u65f6\u7cfb\u7edf\u4e0a\u65b9\u7684\u72b6\u6001\u4e0d\u663e\u793a\uff0c\u4f46\u662f\u9700\u8981\u5c06\u5176\u5e03\u5c40\u4e5f\u7f6e\u4e3agone\uff0c\u4e0d\u5360\u5730\u65b9 \u5728frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java\u6587\u4ef6\u4e2d\u4fee\u6539\u4e00\u4e0b\u5185\u5bb9\uff0c\u5c06\u5e03\u5c40\u7f6e\u4e3aGONE","title":"\u5f7b\u5e95\u9690\u85cf\u865a\u62df\u5bfc\u822a\u952e"},{"location":"Android/android_hide_virtual_navigation_key/#_1","text":"1.1. \u53bb\u6389\u865a\u62df\u5bfc\u822a\u952e \u627e\u5230frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java\u4e2d\u51fd\u6570setInitialDisplaySize(...)\u4e2d\u7684\u4ee3\u7801\u7247\u6bb5 1 2 3 4 5 6 String navBarOverride = SystemProperties . get ( \"qemu.hw.mainkeys\" ); if ( \"1\" . equals ( navBarOverride )) { mHasNavigationBar = false ; } else if ( \"0\" . equals ( navBarOverride )) { mHasNavigationBar = true ; } \u4fee\u6539\u4e3a 1 2 3 4 5 6 7 8 String navBarOverride = SystemProperties . get ( \"qemu.hw.mainkeys\" ); /* modified by fhc 2017-11-24 */ //if (\"1\".equals(navBarOverride)) { mHasNavigationBar = false ; //} else if (\"0\".equals(navBarOverride)) { // mHasNavigationBar = true; //} /* modified by fhc 2017-11-24 end */ 1.2. \u53bb\u6389\u7cfb\u7edf\u9876\u90e8\u7684\u72b6\u6001\u680f\u548c\u901a\u77e5\u680f \u5c4f\u853d\u624b\u52bf\u76d1\u542c frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java \u4fee\u6539\u4ee3\u7801\u7247\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 @Override public boolean onTouchEvent ( MotionEvent event ) { /* modified by fhc 2017-11-24 */ /*boolean barConsumedEvent = mBar.interceptTouchEvent(event); if (DEBUG_GESTURES) { if (event.getActionMasked() != MotionEvent.ACTION_MOVE) { EventLog.writeEvent(EventLogTags.SYSUI_PANELBAR_TOUCH, event.getActionMasked(), (int) event.getX(), (int) event.getY(), barConsumedEvent ? 1 : 0); } } return barConsumedEvent || super.onTouchEvent(event);*/ return false ; /* modified by fhc 2017-11-24 end */ } ... \uff08 \u6b64\u5904\u7701\u7565N\u884c\u4ee3\u7801 \uff09 @Override public boolean onInterceptTouchEvent ( MotionEvent event ) { /* modified by fhc 2017-11-24 */ //return mBar.interceptTouchEvent(event) || super.onInterceptTouchEvent(event); return false ; /* modified by fhc 2017-11-24 end */ } \u4e0d\u663e\u793a\u72b6\u6001\u680f frameworks/base/core/res/res/values/dimens.xml \u5c06\u72b6\u6001\u680f\u9ad8\u5ea6\u4fee\u6539\u4e3a0dp\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 <!-- Height of the status bar --> < dimen name = \"status_bar_height\" > 0dp </ dimen > \u6b64\u65f6\u7cfb\u7edf\u4e0a\u65b9\u7684\u72b6\u6001\u4e0d\u663e\u793a\uff0c\u4f46\u662f\u9700\u8981\u5c06\u5176\u5e03\u5c40\u4e5f\u7f6e\u4e3agone\uff0c\u4e0d\u5360\u5730\u65b9 \u5728frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java\u6587\u4ef6\u4e2d\u4fee\u6539\u4e00\u4e0b\u5185\u5bb9\uff0c\u5c06\u5e03\u5c40\u7f6e\u4e3aGONE","title":"\u5f7b\u5e95\u9690\u85cf\u865a\u62df\u5bfc\u822a\u952e"},{"location":"Android/android_launcher/","text":"Android App\u5f00\u673a\u81ea\u542f\u4e4bLauncher \u00b6 1.1. \u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u52a0\u5165\u4ee5\u4e0b\u8bed\u53e5\uff0c\u4f7fApp\u6210\u4e3aLauncher 1 2 < category android:name = \"android.intent.category.HOME\" /> < category android:name = \"android.intent.category.DEFAULT\" /> 1.2. \u5c06\u7cfb\u7edf\u9ed8\u8ba4Launcher\u5220\u9664 1.3. \u5c06App\uff08.apk\u6587\u4ef6\uff09\u653e\u8fdb/system/app\u76ee\u5f55 1.4. \u5c06App\u6240\u4f7f\u7528\u7684.so\u6587\u4ef6\u5168\u90e8\u653e\u8fdb/system/lib\u76ee\u5f55\uff08/system/app\u4e0b\u7684\u5e94\u7528\u90fd\u662f\u7cfb\u7edf\u5df2\u7ecf\u9884\u88c5\u5b8c\u6210\u7684\u4e0d\u4f1a\u518d\u6b21\u5b89\u88c5\uff0c\u6240\u4ee5\u4e0d\u80fd\u628aso\u6253\u5305\u5230apk\u91cc\u9762\uff09","title":"Launcher"},{"location":"Android/android_launcher/#android-applauncher","text":"1.1. \u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u52a0\u5165\u4ee5\u4e0b\u8bed\u53e5\uff0c\u4f7fApp\u6210\u4e3aLauncher 1 2 < category android:name = \"android.intent.category.HOME\" /> < category android:name = \"android.intent.category.DEFAULT\" /> 1.2. \u5c06\u7cfb\u7edf\u9ed8\u8ba4Launcher\u5220\u9664 1.3. \u5c06App\uff08.apk\u6587\u4ef6\uff09\u653e\u8fdb/system/app\u76ee\u5f55 1.4. \u5c06App\u6240\u4f7f\u7528\u7684.so\u6587\u4ef6\u5168\u90e8\u653e\u8fdb/system/lib\u76ee\u5f55\uff08/system/app\u4e0b\u7684\u5e94\u7528\u90fd\u662f\u7cfb\u7edf\u5df2\u7ecf\u9884\u88c5\u5b8c\u6210\u7684\u4e0d\u4f1a\u518d\u6b21\u5b89\u88c5\uff0c\u6240\u4ee5\u4e0d\u80fd\u628aso\u6253\u5305\u5230apk\u91cc\u9762\uff09","title":"Android App\u5f00\u673a\u81ea\u542f\u4e4bLauncher"},{"location":"Android/android_remove_usb_permission_dialog/","text":"Tip \u6ce8\u610f\uff1a\u8fd8\u662f\u9700\u8981\u7533\u8bf7USB\u8bbe\u5907\u8bbf\u95ee\u6743\u9650\u7684\uff0c\u53ea\u662f\u4e0d\u4f1a\u5f39\u51fa\u5bf9\u8bdd\u6846\u4e86 1.1. \u6253\u5f00\u6b64\u6587\u4ef6 1 /android/frameworks/base/packages/SystemUI/src/com/android/systemui/usb/UsbPermissionActivity.java 1.2. \u4fee\u6539\u4ee3\u7801 \u627e\u5230\u8fd9\u884c\u4ee3\u7801\uff0c\u5c06\u5176\u6ce8\u91ca\u6389 1 //setupAlert(); 1.3. \u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff08\u6839\u636e\u9700\u6c42\u4efb\u9009\u4e00\u4e2a\u65b9\u6848\u5373\u53ef\uff09 1 2 3 4 5 6 7 8 9 10 11 /* \u65b9\u6848\u4e00\uff1a\u4ec5\u4f7f\u81ea\u5df1\u7684App\u4e0d\u5f39\u51fa\u5bf9\u8bdd\u6846 */ if ( ! mPackageName . equals ( \"com.fhc.usbcamera\" )){ //\u53cc\u5f15\u53f7\u5185\u4e3a\u4f60\u8981\u7ed9\u6743\u9650\u7684\u5305\u540d setupAlert (); } else { mPermissionGranted = true ; finish (); } /* \u65b9\u6848\u4e8c\uff1a\u4f7f\u6240\u6709\u7684App\u4e0d\u5f39\u51fa\u5bf9\u8bdd\u6846 */ mPermissionGranted = true ; finish (); \u53c2\u8003\u8d44\u6599\uff1a http://blog.csdn.net/hubbybob1/article/details/50263925","title":"\u53bb\u6389USB\u6743\u9650\u7533\u8bf7\u5bf9\u8bdd\u6846"},{"location":"Android/android_screen_brightness/","text":"\u4fee\u6539\u5c4f\u5e55\u9ed8\u8ba4\u4eae\u5ea6 \u00b6 \u4fee\u6539frameworks/base/packages/SettingsProvider/res/values/defaults.xml\u6587\u4ef6\u4e2d\u7684def_screen_brightness\u503c\uff0c\u5373\u53ef\u8c03\u6574\u5c4f\u5e55\u9ed8\u8ba4\u4eae\u5ea6\u3002 1 2 <!-- Default screen brightness, from 0 to 255. 102 is 40%. --> < integer name = \"def_screen_brightness\" > 102 </ integer >","title":"\u4fee\u6539\u5c4f\u5e55\u9ed8\u8ba4\u4eae\u5ea6"},{"location":"Android/android_screen_brightness/#_1","text":"\u4fee\u6539frameworks/base/packages/SettingsProvider/res/values/defaults.xml\u6587\u4ef6\u4e2d\u7684def_screen_brightness\u503c\uff0c\u5373\u53ef\u8c03\u6574\u5c4f\u5e55\u9ed8\u8ba4\u4eae\u5ea6\u3002 1 2 <!-- Default screen brightness, from 0 to 255. 102 is 40%. --> < integer name = \"def_screen_brightness\" > 102 </ integer >","title":"\u4fee\u6539\u5c4f\u5e55\u9ed8\u8ba4\u4eae\u5ea6"},{"location":"Computer Vision/Computer Vision/","text":"","title":"Computer Vision"},{"location":"Design Patterns/Design Patterns/","text":"","title":"Design Pattern"},{"location":"Hardware/hardware/","text":"","title":"Hardware"},{"location":"Multimedia/Multimedia/","text":"","title":"Multimedia"}]}